plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'maven-publish'
    id 'com.jfrog.bintray' version "1.8.4"
}

group = "com.rvandoosselaer"
version = "1.2.0-SNAPSHOT"

sourceCompatibility = 1.8

ext {
    jmeVersion = "[3.3,)"
    lombokVersion = "[1.18,)"
    slf4jVersion = "[1.8,)"
    log4j2Version = "[2.13,)"
    jacksonVersion = "[2.10,)"
    groovyVersion = "[3.0,)"
}

repositories {
    jcenter()
}

dependencies {
    // JME
    implementation "org.jmonkeyengine:jme3-core:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-desktop:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-plugins:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-blender:${jmeVersion}"
    implementation "org.jmonkeyengine:jme3-jogg:${jmeVersion}"

    // utilities
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // groovy for runtime scripting
    runtime "org.codehaus.groovy:groovy-all:${groovyVersion}"

    // logging
    implementation "org.slf4j:slf4j-api:${slf4jVersion}"
    implementation "org.slf4j:jul-to-slf4j:${slf4jVersion}"
    implementation "org.apache.logging.log4j:log4j-api:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-core:${log4j2Version}"
    implementation "org.apache.logging.log4j:log4j-slf4j18-impl:${log4j2Version}"
    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}"
    implementation "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
}

application {
    mainClassName = "com.rvandoosselaer.jmeconverter.Main"
    applicationName = "jmeconverter"
}

// create a properties file with the version in
task createProperties(dependsOn: processResources) {
    doLast {
        new File("$buildDir/resources/main/version.properties").withWriter { w ->
            Properties p = new Properties()
            p['version'] = project.version.toString()
            p.store w, null
        }
    }
}

// copy the generated javadocs into the /docs folder for the github pages
task copyJavadoc(dependsOn: javadoc) {
    doLast {
        copy {
            from "$buildDir/docs"
            into "$projectDir/docs"
        }
    }
}

// remove the generated javadocs in the /docs folder
task cleanJavadoc(type: Delete) {
    delete "$projectDir/docs/javadoc/"
}

clean {
    dependsOn cleanJavadoc
}

classes {
    dependsOn createProperties
}

build {
    dependsOn copyJavadoc
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    archiveClassifier = 'javadoc'
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            artifactId 'jmeconverter'
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_APIKEY')
    publications = ['MyPublication']
    pkg {
        repo = 'rvandoosselaer'
        name = rootProject.getName()
        licenses = ['BSD 3-Clause']
        vcsUrl = 'https://github.com/rvandoosselaer/JmeConverter.git'
        version {
            name = '1.2.0-SNAPSHOT'
            released = new Date()
        }
    }
}